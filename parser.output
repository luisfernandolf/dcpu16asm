

Terminals which are not used:

   ERROR


Conflict in state 58 between rule 84 and token '+' resolved as reduce.
Conflict in state 58 between rule 84 and token '-' resolved as reduce.
Conflict in state 58 between rule 84 and token '*' resolved as reduce.
Conflict in state 58 between rule 84 and token '/' resolved as reduce.
Conflict in state 58 between rule 84 and token '%' resolved as reduce.
Conflict in state 106 between rule 78 and token '+' resolved as reduce.
Conflict in state 106 between rule 78 and token '-' resolved as reduce.
Conflict in state 106 between rule 78 and token '*' resolved as shift.
Conflict in state 106 between rule 78 and token '/' resolved as shift.
Conflict in state 106 between rule 78 and token '%' resolved as shift.
Conflict in state 107 between rule 79 and token '+' resolved as reduce.
Conflict in state 107 between rule 79 and token '-' resolved as reduce.
Conflict in state 107 between rule 79 and token '*' resolved as shift.
Conflict in state 107 between rule 79 and token '/' resolved as shift.
Conflict in state 107 between rule 79 and token '%' resolved as shift.
Conflict in state 108 between rule 80 and token '+' resolved as reduce.
Conflict in state 108 between rule 80 and token '-' resolved as reduce.
Conflict in state 108 between rule 80 and token '*' resolved as reduce.
Conflict in state 108 between rule 80 and token '/' resolved as reduce.
Conflict in state 108 between rule 80 and token '%' resolved as reduce.
Conflict in state 109 between rule 81 and token '+' resolved as reduce.
Conflict in state 109 between rule 81 and token '-' resolved as reduce.
Conflict in state 109 between rule 81 and token '*' resolved as reduce.
Conflict in state 109 between rule 81 and token '/' resolved as reduce.
Conflict in state 109 between rule 81 and token '%' resolved as reduce.
Conflict in state 110 between rule 82 and token '+' resolved as reduce.
Conflict in state 110 between rule 82 and token '-' resolved as reduce.
Conflict in state 110 between rule 82 and token '*' resolved as reduce.
Conflict in state 110 between rule 82 and token '/' resolved as reduce.
Conflict in state 110 between rule 82 and token '%' resolved as reduce.

Grammar
rule 1    all -> lines EOFILE
rule 2    lines -> line
rule 3    lines -> lines line
rule 4    line -> EOL
rule 5    line -> IDENT '=' expr EOL
rule 6    line -> IDENT EQU expr EOL
rule 7    line -> label ORGIN expr EOL
rule 8    line -> ORGIN expr EOL
rule 9    line -> label EOL
rule 10   line -> macro EOL
rule 11   line -> label macro EOL
rule 12   line -> expr EOL
rule 13   label -> IDENT ':'
rule 14   label -> ':' IDENT
rule 15   macro -> WORD datseq
rule 16   macro -> BYTE datseq
rule 17   macro -> opcode_expr
rule 18   datseq -> STRING
rule 19   datseq -> expr
rule 20   datseq -> STRING ',' datseq
rule 21   datseq -> expr ',' datseq
rule 22   operand_regester -> REG_A
rule 23   operand_regester -> REG_B
rule 24   operand_regester -> REG_C
rule 25   operand_regester -> REG_X
rule 26   operand_regester -> REG_Y
rule 27   operand_regester -> REG_Z
rule 28   operand_regester -> REG_I
rule 29   operand_regester -> REG_J
rule 30   operand_expr -> operand_regester
rule 31   operand_expr -> '[' operand_regester ']'
rule 32   operand_expr -> '[' operand_regester '+' expr ']'
rule 33   operand_expr -> '[' expr '+' operand_regester ']'
rule 34   operand_expr -> PUSH
rule 35   operand_expr -> POP
rule 36   operand_expr -> PEEK
rule 37   operand_expr -> '[' REG_SP ']'
rule 38   operand_expr -> PICK expr
rule 39   operand_expr -> '[' REG_SP '+' expr ']'
rule 40   operand_expr -> REG_SP
rule 41   operand_expr -> REG_PC
rule 42   operand_expr -> REG_EX
rule 43   operand_expr -> '[' expr ']'
rule 44   operand_expr -> expr
rule 45   opcode_expr_single -> JSR
rule 46   opcode_expr_single -> INT
rule 47   opcode_expr_single -> ING
rule 48   opcode_expr_single -> INS
rule 49   opcode_expr_single -> HWN
rule 50   opcode_expr_single -> HWQ
rule 51   opcode_expr_single -> HWI
rule 52   opcode_expr_double -> SET
rule 53   opcode_expr_double -> ADD
rule 54   opcode_expr_double -> SUB
rule 55   opcode_expr_double -> MUL
rule 56   opcode_expr_double -> MUI
rule 57   opcode_expr_double -> DIV
rule 58   opcode_expr_double -> DVI
rule 59   opcode_expr_double -> MOD
rule 60   opcode_expr_double -> AND
rule 61   opcode_expr_double -> BOR
rule 62   opcode_expr_double -> XOR
rule 63   opcode_expr_double -> SHR
rule 64   opcode_expr_double -> ASR
rule 65   opcode_expr_double -> SHL
rule 66   opcode_expr_double -> IFB
rule 67   opcode_expr_double -> IFC
rule 68   opcode_expr_double -> IFE
rule 69   opcode_expr_double -> IFN
rule 70   opcode_expr_double -> IFG
rule 71   opcode_expr_double -> IFA
rule 72   opcode_expr_double -> IFL
rule 73   opcode_expr_double -> IFU
rule 74   opcode_expr_double -> ADX
rule 75   opcode_expr_double -> SUX
rule 76   opcode_expr -> opcode_expr_double operand_expr ',' operand_expr
rule 77   opcode_expr -> opcode_expr_single operand_expr
rule 78   expr -> expr '+' expr
rule 79   expr -> expr '-' expr
rule 80   expr -> expr '*' expr
rule 81   expr -> expr '/' expr
rule 82   expr -> expr '%' expr
rule 83   expr -> '(' expr ')'
rule 84   expr -> '-' expr
rule 85   expr -> NUMBER
rule 86   expr -> IDENT

Terminals, with rules where they appear

$ (-1)
'%' (37) 82
'(' (40) 83
')' (41) 83
'*' (42) 80
'+' (43) 32 33 39 78
',' (44) 20 21 76
'-' (45) 79 84
'/' (47) 81
':' (58) 13 14
'=' (61) 5
'[' (91) 31 32 33 37 39 43
']' (93) 31 32 33 37 39 43
error (256)
SET (258) 52
ADD (259) 53
SUB (260) 54
MUL (261) 55
MUI (262) 56
DIV (263) 57
DVI (264) 58
MOD (265) 59
AND (266) 60
BOR (267) 61
XOR (268) 62
SHR (269) 63
ASR (270) 64
SHL (271) 65
IFB (272) 66
IFC (273) 67
IFE (274) 68
IFN (275) 69
IFG (276) 70
IFA (277) 71
IFL (278) 72
IFU (279) 73
ADX (280) 74
SUX (281) 75
JSR (282) 45
INT (283) 46
ING (284) 47
INS (285) 48
HWN (286) 49
HWQ (287) 50
HWI (288) 51
ORGIN (289) 7 8
WORD (290) 15
BYTE (291) 16
EQU (292) 6
NUMBER (293) 85
IDENT (294) 5 6 13 14 86
EOL (295) 4 5 6 7 8 9 10 11 12
EOFILE (296) 1
ERROR (297)
REG_A (298) 22
REG_B (299) 23
REG_C (300) 24
REG_X (301) 25
REG_Y (302) 26
REG_Z (303) 27
REG_I (304) 28
REG_J (305) 29
REG_SP (306) 37 39 40
REG_EX (307) 42
REG_PC (308) 41
PEEK (309) 36
POP (310) 35
PICK (311) 38
PUSH (312) 34
STRING (313) 18 20
UMINUS (314)

Nonterminals, with rules where they appear

all (72)
    on left: 1
lines (73)
    on left: 2 3, on right: 1 3
line (74)
    on left: 4 5 6 7 8 9 10 11 12, on right: 2 3
label (75)
    on left: 13 14, on right: 7 9 11
macro (76)
    on left: 15 16 17, on right: 10 11
datseq (77)
    on left: 18 19 20 21, on right: 15 16 20 21
operand_regester (78)
    on left: 22 23 24 25 26 27 28 29, on right: 30 31 32 33
operand_expr (79)
    on left: 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44,
    on right: 76 77
opcode_expr_single (80)
    on left: 45 46 47 48 49 50 51, on right: 77
opcode_expr_double (81)
    on left: 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69
    70 71 72 73 74 75, on right: 76
opcode_expr (82)
    on left: 76 77, on right: 17
expr (83)
    on left: 78 79 80 81 82 83 84 85 86, on right: 5 6 7 8 12 19 21
    32 33 38 39 43 44 78 79 80 81 82 83 84


state 0

    SET 	shift, and go to state 1
    ADD 	shift, and go to state 2
    SUB 	shift, and go to state 3
    MUL 	shift, and go to state 4
    MUI 	shift, and go to state 5
    DIV 	shift, and go to state 6
    DVI 	shift, and go to state 7
    MOD 	shift, and go to state 8
    AND 	shift, and go to state 9
    BOR 	shift, and go to state 10
    XOR 	shift, and go to state 11
    SHR 	shift, and go to state 12
    ASR 	shift, and go to state 13
    SHL 	shift, and go to state 14
    IFB 	shift, and go to state 15
    IFC 	shift, and go to state 16
    IFE 	shift, and go to state 17
    IFN 	shift, and go to state 18
    IFG 	shift, and go to state 19
    IFA 	shift, and go to state 20
    IFL 	shift, and go to state 21
    IFU 	shift, and go to state 22
    ADX 	shift, and go to state 23
    SUX 	shift, and go to state 24
    JSR 	shift, and go to state 25
    INT 	shift, and go to state 26
    ING 	shift, and go to state 27
    INS 	shift, and go to state 28
    HWN 	shift, and go to state 29
    HWQ 	shift, and go to state 30
    HWI 	shift, and go to state 31
    ORGIN	shift, and go to state 32
    WORD	shift, and go to state 33
    BYTE	shift, and go to state 34
    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 36
    EOL 	shift, and go to state 37
    '-' 	shift, and go to state 38
    ':' 	shift, and go to state 39
    '(' 	shift, and go to state 40

    all 	go to state 129
    lines	go to state 41
    line	go to state 42
    label	go to state 43
    macro	go to state 44
    opcode_expr_single	go to state 45
    opcode_expr_double	go to state 46
    opcode_expr	go to state 47
    expr	go to state 48



state 1

    opcode_expr_double  ->  SET .   (rule 52)

    $default	reduce using rule 52 (opcode_expr_double)



state 2

    opcode_expr_double  ->  ADD .   (rule 53)

    $default	reduce using rule 53 (opcode_expr_double)



state 3

    opcode_expr_double  ->  SUB .   (rule 54)

    $default	reduce using rule 54 (opcode_expr_double)



state 4

    opcode_expr_double  ->  MUL .   (rule 55)

    $default	reduce using rule 55 (opcode_expr_double)



state 5

    opcode_expr_double  ->  MUI .   (rule 56)

    $default	reduce using rule 56 (opcode_expr_double)



state 6

    opcode_expr_double  ->  DIV .   (rule 57)

    $default	reduce using rule 57 (opcode_expr_double)



state 7

    opcode_expr_double  ->  DVI .   (rule 58)

    $default	reduce using rule 58 (opcode_expr_double)



state 8

    opcode_expr_double  ->  MOD .   (rule 59)

    $default	reduce using rule 59 (opcode_expr_double)



state 9

    opcode_expr_double  ->  AND .   (rule 60)

    $default	reduce using rule 60 (opcode_expr_double)



state 10

    opcode_expr_double  ->  BOR .   (rule 61)

    $default	reduce using rule 61 (opcode_expr_double)



state 11

    opcode_expr_double  ->  XOR .   (rule 62)

    $default	reduce using rule 62 (opcode_expr_double)



state 12

    opcode_expr_double  ->  SHR .   (rule 63)

    $default	reduce using rule 63 (opcode_expr_double)



state 13

    opcode_expr_double  ->  ASR .   (rule 64)

    $default	reduce using rule 64 (opcode_expr_double)



state 14

    opcode_expr_double  ->  SHL .   (rule 65)

    $default	reduce using rule 65 (opcode_expr_double)



state 15

    opcode_expr_double  ->  IFB .   (rule 66)

    $default	reduce using rule 66 (opcode_expr_double)



state 16

    opcode_expr_double  ->  IFC .   (rule 67)

    $default	reduce using rule 67 (opcode_expr_double)



state 17

    opcode_expr_double  ->  IFE .   (rule 68)

    $default	reduce using rule 68 (opcode_expr_double)



state 18

    opcode_expr_double  ->  IFN .   (rule 69)

    $default	reduce using rule 69 (opcode_expr_double)



state 19

    opcode_expr_double  ->  IFG .   (rule 70)

    $default	reduce using rule 70 (opcode_expr_double)



state 20

    opcode_expr_double  ->  IFA .   (rule 71)

    $default	reduce using rule 71 (opcode_expr_double)



state 21

    opcode_expr_double  ->  IFL .   (rule 72)

    $default	reduce using rule 72 (opcode_expr_double)



state 22

    opcode_expr_double  ->  IFU .   (rule 73)

    $default	reduce using rule 73 (opcode_expr_double)



state 23

    opcode_expr_double  ->  ADX .   (rule 74)

    $default	reduce using rule 74 (opcode_expr_double)



state 24

    opcode_expr_double  ->  SUX .   (rule 75)

    $default	reduce using rule 75 (opcode_expr_double)



state 25

    opcode_expr_single  ->  JSR .   (rule 45)

    $default	reduce using rule 45 (opcode_expr_single)



state 26

    opcode_expr_single  ->  INT .   (rule 46)

    $default	reduce using rule 46 (opcode_expr_single)



state 27

    opcode_expr_single  ->  ING .   (rule 47)

    $default	reduce using rule 47 (opcode_expr_single)



state 28

    opcode_expr_single  ->  INS .   (rule 48)

    $default	reduce using rule 48 (opcode_expr_single)



state 29

    opcode_expr_single  ->  HWN .   (rule 49)

    $default	reduce using rule 49 (opcode_expr_single)



state 30

    opcode_expr_single  ->  HWQ .   (rule 50)

    $default	reduce using rule 50 (opcode_expr_single)



state 31

    opcode_expr_single  ->  HWI .   (rule 51)

    $default	reduce using rule 51 (opcode_expr_single)



state 32

    line  ->  ORGIN . expr EOL   (rule 8)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 50



state 33

    macro  ->  WORD . datseq   (rule 15)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    STRING	shift, and go to state 51
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    datseq	go to state 52
    expr	go to state 53



state 34

    macro  ->  BYTE . datseq   (rule 16)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    STRING	shift, and go to state 51
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    datseq	go to state 54
    expr	go to state 53



state 35

    expr  ->  NUMBER .   (rule 85)

    $default	reduce using rule 85 (expr)



state 36

    line  ->  IDENT . '=' expr EOL   (rule 5)
    line  ->  IDENT . EQU expr EOL   (rule 6)
    label  ->  IDENT . ':'   (rule 13)
    expr  ->  IDENT .   (rule 86)

    EQU 	shift, and go to state 55
    '=' 	shift, and go to state 56
    ':' 	shift, and go to state 57

    $default	reduce using rule 86 (expr)



state 37

    line  ->  EOL .   (rule 4)

    $default	reduce using rule 4 (line)



state 38

    expr  ->  '-' . expr   (rule 84)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 58



state 39

    label  ->  ':' . IDENT   (rule 14)

    IDENT	shift, and go to state 59



state 40

    expr  ->  '(' . expr ')'   (rule 83)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 60



state 41

    all  ->  lines . EOFILE   (rule 1)
    lines  ->  lines . line   (rule 3)

    SET 	shift, and go to state 1
    ADD 	shift, and go to state 2
    SUB 	shift, and go to state 3
    MUL 	shift, and go to state 4
    MUI 	shift, and go to state 5
    DIV 	shift, and go to state 6
    DVI 	shift, and go to state 7
    MOD 	shift, and go to state 8
    AND 	shift, and go to state 9
    BOR 	shift, and go to state 10
    XOR 	shift, and go to state 11
    SHR 	shift, and go to state 12
    ASR 	shift, and go to state 13
    SHL 	shift, and go to state 14
    IFB 	shift, and go to state 15
    IFC 	shift, and go to state 16
    IFE 	shift, and go to state 17
    IFN 	shift, and go to state 18
    IFG 	shift, and go to state 19
    IFA 	shift, and go to state 20
    IFL 	shift, and go to state 21
    IFU 	shift, and go to state 22
    ADX 	shift, and go to state 23
    SUX 	shift, and go to state 24
    JSR 	shift, and go to state 25
    INT 	shift, and go to state 26
    ING 	shift, and go to state 27
    INS 	shift, and go to state 28
    HWN 	shift, and go to state 29
    HWQ 	shift, and go to state 30
    HWI 	shift, and go to state 31
    ORGIN	shift, and go to state 32
    WORD	shift, and go to state 33
    BYTE	shift, and go to state 34
    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 36
    EOL 	shift, and go to state 37
    EOFILE	shift, and go to state 61
    '-' 	shift, and go to state 38
    ':' 	shift, and go to state 39
    '(' 	shift, and go to state 40

    line	go to state 62
    label	go to state 43
    macro	go to state 44
    opcode_expr_single	go to state 45
    opcode_expr_double	go to state 46
    opcode_expr	go to state 47
    expr	go to state 48



state 42

    lines  ->  line .   (rule 2)

    $default	reduce using rule 2 (lines)



state 43

    line  ->  label . ORGIN expr EOL   (rule 7)
    line  ->  label . EOL   (rule 9)
    line  ->  label . macro EOL   (rule 11)

    SET 	shift, and go to state 1
    ADD 	shift, and go to state 2
    SUB 	shift, and go to state 3
    MUL 	shift, and go to state 4
    MUI 	shift, and go to state 5
    DIV 	shift, and go to state 6
    DVI 	shift, and go to state 7
    MOD 	shift, and go to state 8
    AND 	shift, and go to state 9
    BOR 	shift, and go to state 10
    XOR 	shift, and go to state 11
    SHR 	shift, and go to state 12
    ASR 	shift, and go to state 13
    SHL 	shift, and go to state 14
    IFB 	shift, and go to state 15
    IFC 	shift, and go to state 16
    IFE 	shift, and go to state 17
    IFN 	shift, and go to state 18
    IFG 	shift, and go to state 19
    IFA 	shift, and go to state 20
    IFL 	shift, and go to state 21
    IFU 	shift, and go to state 22
    ADX 	shift, and go to state 23
    SUX 	shift, and go to state 24
    JSR 	shift, and go to state 25
    INT 	shift, and go to state 26
    ING 	shift, and go to state 27
    INS 	shift, and go to state 28
    HWN 	shift, and go to state 29
    HWQ 	shift, and go to state 30
    HWI 	shift, and go to state 31
    ORGIN	shift, and go to state 63
    WORD	shift, and go to state 33
    BYTE	shift, and go to state 34
    EOL 	shift, and go to state 64

    macro	go to state 65
    opcode_expr_single	go to state 45
    opcode_expr_double	go to state 46
    opcode_expr	go to state 47



state 44

    line  ->  macro . EOL   (rule 10)

    EOL 	shift, and go to state 66



state 45

    opcode_expr  ->  opcode_expr_single . operand_expr   (rule 77)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    REG_A	shift, and go to state 67
    REG_B	shift, and go to state 68
    REG_C	shift, and go to state 69
    REG_X	shift, and go to state 70
    REG_Y	shift, and go to state 71
    REG_Z	shift, and go to state 72
    REG_I	shift, and go to state 73
    REG_J	shift, and go to state 74
    REG_SP	shift, and go to state 75
    REG_EX	shift, and go to state 76
    REG_PC	shift, and go to state 77
    PEEK	shift, and go to state 78
    POP 	shift, and go to state 79
    PICK	shift, and go to state 80
    PUSH	shift, and go to state 81
    '-' 	shift, and go to state 38
    '[' 	shift, and go to state 82
    '(' 	shift, and go to state 40

    operand_regester	go to state 83
    operand_expr	go to state 84
    expr	go to state 85



state 46

    opcode_expr  ->  opcode_expr_double . operand_expr ',' operand_expr   (rule 76)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    REG_A	shift, and go to state 67
    REG_B	shift, and go to state 68
    REG_C	shift, and go to state 69
    REG_X	shift, and go to state 70
    REG_Y	shift, and go to state 71
    REG_Z	shift, and go to state 72
    REG_I	shift, and go to state 73
    REG_J	shift, and go to state 74
    REG_SP	shift, and go to state 75
    REG_EX	shift, and go to state 76
    REG_PC	shift, and go to state 77
    PEEK	shift, and go to state 78
    POP 	shift, and go to state 79
    PICK	shift, and go to state 80
    PUSH	shift, and go to state 81
    '-' 	shift, and go to state 38
    '[' 	shift, and go to state 82
    '(' 	shift, and go to state 40

    operand_regester	go to state 83
    operand_expr	go to state 86
    expr	go to state 85



state 47

    macro  ->  opcode_expr .   (rule 17)

    $default	reduce using rule 17 (macro)



state 48

    line  ->  expr . EOL   (rule 12)
    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    EOL 	shift, and go to state 87
    '+' 	shift, and go to state 88
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92



state 49

    expr  ->  IDENT .   (rule 86)

    $default	reduce using rule 86 (expr)



state 50

    line  ->  ORGIN expr . EOL   (rule 8)
    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    EOL 	shift, and go to state 93
    '+' 	shift, and go to state 88
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92



state 51

    datseq  ->  STRING .   (rule 18)
    datseq  ->  STRING . ',' datseq   (rule 20)

    ',' 	shift, and go to state 94

    $default	reduce using rule 18 (datseq)



state 52

    macro  ->  WORD datseq .   (rule 15)

    $default	reduce using rule 15 (macro)



state 53

    datseq  ->  expr .   (rule 19)
    datseq  ->  expr . ',' datseq   (rule 21)
    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    '+' 	shift, and go to state 88
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92
    ',' 	shift, and go to state 95

    $default	reduce using rule 19 (datseq)



state 54

    macro  ->  BYTE datseq .   (rule 16)

    $default	reduce using rule 16 (macro)



state 55

    line  ->  IDENT EQU . expr EOL   (rule 6)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 96



state 56

    line  ->  IDENT '=' . expr EOL   (rule 5)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 97



state 57

    label  ->  IDENT ':' .   (rule 13)

    $default	reduce using rule 13 (label)



state 58

    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)
    expr  ->  '-' expr .   (rule 84)


    $default	reduce using rule 84 (expr)



state 59

    label  ->  ':' IDENT .   (rule 14)

    $default	reduce using rule 14 (label)



state 60

    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)
    expr  ->  '(' expr . ')'   (rule 83)

    '+' 	shift, and go to state 88
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92
    ')' 	shift, and go to state 98



state 61

    all  ->  lines EOFILE .   (rule 1)

    $default	reduce using rule 1 (all)



state 62

    lines  ->  lines line .   (rule 3)

    $default	reduce using rule 3 (lines)



state 63

    line  ->  label ORGIN . expr EOL   (rule 7)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 99



state 64

    line  ->  label EOL .   (rule 9)

    $default	reduce using rule 9 (line)



state 65

    line  ->  label macro . EOL   (rule 11)

    EOL 	shift, and go to state 100



state 66

    line  ->  macro EOL .   (rule 10)

    $default	reduce using rule 10 (line)



state 67

    operand_regester  ->  REG_A .   (rule 22)

    $default	reduce using rule 22 (operand_regester)



state 68

    operand_regester  ->  REG_B .   (rule 23)

    $default	reduce using rule 23 (operand_regester)



state 69

    operand_regester  ->  REG_C .   (rule 24)

    $default	reduce using rule 24 (operand_regester)



state 70

    operand_regester  ->  REG_X .   (rule 25)

    $default	reduce using rule 25 (operand_regester)



state 71

    operand_regester  ->  REG_Y .   (rule 26)

    $default	reduce using rule 26 (operand_regester)



state 72

    operand_regester  ->  REG_Z .   (rule 27)

    $default	reduce using rule 27 (operand_regester)



state 73

    operand_regester  ->  REG_I .   (rule 28)

    $default	reduce using rule 28 (operand_regester)



state 74

    operand_regester  ->  REG_J .   (rule 29)

    $default	reduce using rule 29 (operand_regester)



state 75

    operand_expr  ->  REG_SP .   (rule 40)

    $default	reduce using rule 40 (operand_expr)



state 76

    operand_expr  ->  REG_EX .   (rule 42)

    $default	reduce using rule 42 (operand_expr)



state 77

    operand_expr  ->  REG_PC .   (rule 41)

    $default	reduce using rule 41 (operand_expr)



state 78

    operand_expr  ->  PEEK .   (rule 36)

    $default	reduce using rule 36 (operand_expr)



state 79

    operand_expr  ->  POP .   (rule 35)

    $default	reduce using rule 35 (operand_expr)



state 80

    operand_expr  ->  PICK . expr   (rule 38)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 101



state 81

    operand_expr  ->  PUSH .   (rule 34)

    $default	reduce using rule 34 (operand_expr)



state 82

    operand_expr  ->  '[' . operand_regester ']'   (rule 31)
    operand_expr  ->  '[' . operand_regester '+' expr ']'   (rule 32)
    operand_expr  ->  '[' . expr '+' operand_regester ']'   (rule 33)
    operand_expr  ->  '[' . REG_SP ']'   (rule 37)
    operand_expr  ->  '[' . REG_SP '+' expr ']'   (rule 39)
    operand_expr  ->  '[' . expr ']'   (rule 43)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    REG_A	shift, and go to state 67
    REG_B	shift, and go to state 68
    REG_C	shift, and go to state 69
    REG_X	shift, and go to state 70
    REG_Y	shift, and go to state 71
    REG_Z	shift, and go to state 72
    REG_I	shift, and go to state 73
    REG_J	shift, and go to state 74
    REG_SP	shift, and go to state 102
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    operand_regester	go to state 103
    expr	go to state 104



state 83

    operand_expr  ->  operand_regester .   (rule 30)

    $default	reduce using rule 30 (operand_expr)



state 84

    opcode_expr  ->  opcode_expr_single operand_expr .   (rule 77)

    $default	reduce using rule 77 (opcode_expr)



state 85

    operand_expr  ->  expr .   (rule 44)
    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    '+' 	shift, and go to state 88
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92

    $default	reduce using rule 44 (operand_expr)



state 86

    opcode_expr  ->  opcode_expr_double operand_expr . ',' operand_expr   (rule 76)

    ',' 	shift, and go to state 105



state 87

    line  ->  expr EOL .   (rule 12)

    $default	reduce using rule 12 (line)



state 88

    expr  ->  expr '+' . expr   (rule 78)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 106



state 89

    expr  ->  expr '-' . expr   (rule 79)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 107



state 90

    expr  ->  expr '*' . expr   (rule 80)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 108



state 91

    expr  ->  expr '/' . expr   (rule 81)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 109



state 92

    expr  ->  expr '%' . expr   (rule 82)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 110



state 93

    line  ->  ORGIN expr EOL .   (rule 8)

    $default	reduce using rule 8 (line)



state 94

    datseq  ->  STRING ',' . datseq   (rule 20)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    STRING	shift, and go to state 51
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    datseq	go to state 111
    expr	go to state 53



state 95

    datseq  ->  expr ',' . datseq   (rule 21)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    STRING	shift, and go to state 51
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    datseq	go to state 112
    expr	go to state 53



state 96

    line  ->  IDENT EQU expr . EOL   (rule 6)
    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    EOL 	shift, and go to state 113
    '+' 	shift, and go to state 88
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92



state 97

    line  ->  IDENT '=' expr . EOL   (rule 5)
    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    EOL 	shift, and go to state 114
    '+' 	shift, and go to state 88
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92



state 98

    expr  ->  '(' expr ')' .   (rule 83)

    $default	reduce using rule 83 (expr)



state 99

    line  ->  label ORGIN expr . EOL   (rule 7)
    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    EOL 	shift, and go to state 115
    '+' 	shift, and go to state 88
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92



state 100

    line  ->  label macro EOL .   (rule 11)

    $default	reduce using rule 11 (line)



state 101

    operand_expr  ->  PICK expr .   (rule 38)
    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    '+' 	shift, and go to state 88
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92

    $default	reduce using rule 38 (operand_expr)



state 102

    operand_expr  ->  '[' REG_SP . ']'   (rule 37)
    operand_expr  ->  '[' REG_SP . '+' expr ']'   (rule 39)

    '+' 	shift, and go to state 116
    ']' 	shift, and go to state 117



state 103

    operand_expr  ->  '[' operand_regester . ']'   (rule 31)
    operand_expr  ->  '[' operand_regester . '+' expr ']'   (rule 32)

    '+' 	shift, and go to state 118
    ']' 	shift, and go to state 119



state 104

    operand_expr  ->  '[' expr . '+' operand_regester ']'   (rule 33)
    operand_expr  ->  '[' expr . ']'   (rule 43)
    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    '+' 	shift, and go to state 120
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92
    ']' 	shift, and go to state 121



state 105

    opcode_expr  ->  opcode_expr_double operand_expr ',' . operand_expr   (rule 76)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    REG_A	shift, and go to state 67
    REG_B	shift, and go to state 68
    REG_C	shift, and go to state 69
    REG_X	shift, and go to state 70
    REG_Y	shift, and go to state 71
    REG_Z	shift, and go to state 72
    REG_I	shift, and go to state 73
    REG_J	shift, and go to state 74
    REG_SP	shift, and go to state 75
    REG_EX	shift, and go to state 76
    REG_PC	shift, and go to state 77
    PEEK	shift, and go to state 78
    POP 	shift, and go to state 79
    PICK	shift, and go to state 80
    PUSH	shift, and go to state 81
    '-' 	shift, and go to state 38
    '[' 	shift, and go to state 82
    '(' 	shift, and go to state 40

    operand_regester	go to state 83
    operand_expr	go to state 122
    expr	go to state 85



state 106

    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr '+' expr .   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92

    $default	reduce using rule 78 (expr)



state 107

    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr '-' expr .   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92

    $default	reduce using rule 79 (expr)



state 108

    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr '*' expr .   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)


    $default	reduce using rule 80 (expr)



state 109

    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr '/' expr .   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)


    $default	reduce using rule 81 (expr)



state 110

    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)
    expr  ->  expr '%' expr .   (rule 82)


    $default	reduce using rule 82 (expr)



state 111

    datseq  ->  STRING ',' datseq .   (rule 20)

    $default	reduce using rule 20 (datseq)



state 112

    datseq  ->  expr ',' datseq .   (rule 21)

    $default	reduce using rule 21 (datseq)



state 113

    line  ->  IDENT EQU expr EOL .   (rule 6)

    $default	reduce using rule 6 (line)



state 114

    line  ->  IDENT '=' expr EOL .   (rule 5)

    $default	reduce using rule 5 (line)



state 115

    line  ->  label ORGIN expr EOL .   (rule 7)

    $default	reduce using rule 7 (line)



state 116

    operand_expr  ->  '[' REG_SP '+' . expr ']'   (rule 39)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 123



state 117

    operand_expr  ->  '[' REG_SP ']' .   (rule 37)

    $default	reduce using rule 37 (operand_expr)



state 118

    operand_expr  ->  '[' operand_regester '+' . expr ']'   (rule 32)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    expr	go to state 124



state 119

    operand_expr  ->  '[' operand_regester ']' .   (rule 31)

    $default	reduce using rule 31 (operand_expr)



state 120

    operand_expr  ->  '[' expr '+' . operand_regester ']'   (rule 33)
    expr  ->  expr '+' . expr   (rule 78)

    NUMBER	shift, and go to state 35
    IDENT	shift, and go to state 49
    REG_A	shift, and go to state 67
    REG_B	shift, and go to state 68
    REG_C	shift, and go to state 69
    REG_X	shift, and go to state 70
    REG_Y	shift, and go to state 71
    REG_Z	shift, and go to state 72
    REG_I	shift, and go to state 73
    REG_J	shift, and go to state 74
    '-' 	shift, and go to state 38
    '(' 	shift, and go to state 40

    operand_regester	go to state 125
    expr	go to state 106



state 121

    operand_expr  ->  '[' expr ']' .   (rule 43)

    $default	reduce using rule 43 (operand_expr)



state 122

    opcode_expr  ->  opcode_expr_double operand_expr ',' operand_expr .   (rule 76)

    $default	reduce using rule 76 (opcode_expr)



state 123

    operand_expr  ->  '[' REG_SP '+' expr . ']'   (rule 39)
    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    '+' 	shift, and go to state 88
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92
    ']' 	shift, and go to state 126



state 124

    operand_expr  ->  '[' operand_regester '+' expr . ']'   (rule 32)
    expr  ->  expr . '+' expr   (rule 78)
    expr  ->  expr . '-' expr   (rule 79)
    expr  ->  expr . '*' expr   (rule 80)
    expr  ->  expr . '/' expr   (rule 81)
    expr  ->  expr . '%' expr   (rule 82)

    '+' 	shift, and go to state 88
    '-' 	shift, and go to state 89
    '*' 	shift, and go to state 90
    '/' 	shift, and go to state 91
    '%' 	shift, and go to state 92
    ']' 	shift, and go to state 127



state 125

    operand_expr  ->  '[' expr '+' operand_regester . ']'   (rule 33)

    ']' 	shift, and go to state 128



state 126

    operand_expr  ->  '[' REG_SP '+' expr ']' .   (rule 39)

    $default	reduce using rule 39 (operand_expr)



state 127

    operand_expr  ->  '[' operand_regester '+' expr ']' .   (rule 32)

    $default	reduce using rule 32 (operand_expr)



state 128

    operand_expr  ->  '[' expr '+' operand_regester ']' .   (rule 33)

    $default	reduce using rule 33 (operand_expr)



state 129

    $   	go to state 130



state 130

    $   	go to state 131



state 131

    $default	accept
